// let balance1;
let balance2 = 1;

// console.log(balance1 || 'no') // falsy - 
// console.log(balance1 ?? balance2) // null, undefined


/**
 * TODO Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º
 * –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
 * –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
 * –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
 * –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
 * –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
 * –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.
 */
//  const genres = ["Jazz", "Blues"];
//  genres.push("–†–æ–∫-–Ω-—Ä–æ–ª–ª");
//  console.log(genres[0])
//  console.log(genres[genres.length - 1])
//  console.log(genres.shift())
//  console.log(genres.unshift('¬´Country¬ª', '¬´Reggy¬ª'))
//  console.log(genres);

 /**
  * TODO Example 2 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
  * –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
  * –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.
  */
 const values = '8 11';
 const valuesArr = values.split(' ')
//  console.log(Number(valuesArr[0]) * Number(valuesArr[1]))
 
 /**
  * TODO Example 3 - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞
  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for.
  * –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
  * —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞.
  * –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.
  */
 const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
 
//  for (let i = 0; i < fruits.length; i += 1) {
//      console.log(i + 1, fruits[i]) // fruits[0], fruits[1], fruits[2] 
//  }

 
 /**
  * TODO Example 4 - –ú–∞—Å—Å–∏–≤—ã –∏ —Ü–∏–∫–ª—ã
  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
  * –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤,
  * —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç
  * –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.
  *
  * const names = 'Jacob,William,Solomon,Artemis';
  * const phones = '89001234567,89001112233,890055566377,890055566300';
  */
 
//  const names = 'Jacob,William,Solomon,Artemis';
//  const phones = '89001234567,89001112233,890055566377,890055566300';

//  const namesArr = names.split(',')
//  const phonesArr = phones.split(',')
//  const count = namesArr.length
 
//  for (let i = 0; i < count; i += 1) {
//     console.log(namesArr[i], phonesArr[i])
//  }

 /**
  * TODO Example 5 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.
  * –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º.
  * –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.
  */
 
 const str = 'Welcome   to the future hello';
//  const strArr = str.split(' ')
//  console.log(strArr)
//  const res = strArr.slice(1, -1)
//  console.log(res.join(' ').trim())
 

 
 /**
  * TODO Example 6 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤)
  * –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.
  */
 
 const string = '!Welcome to the future!';
//  console.log(string.split('').reverse().join(''))
 const reversedStr = '';

//  for (let i = string.length - 1; i >= 0; i -= 1 ) {
//      console.log(string[i])
//  }
 


/* Example 10 - –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–µ—Ç–≤–ª–µ–Ω–∏—è
* –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –ª–æ–≥–∏–Ω —Å –ø–æ–º–æ—â—å—é 
prompt –∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞.
*
* –ï—Å–ª–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç "–ê–¥–º–∏–Ω", —Ç–æ prompt –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å
* –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–¥–µ–Ω–æ –∏–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ Esc - 
–≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É "–û—Ç–º–µ–Ω–µ–Ω–æ"
* –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É "–Ø –≤–∞—Å –Ω–µ –∑–Ω–∞—é"
* –ü–∞—Ä–æ–ª—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–∞–∫:
*
* –ï—Å–ª–∏ –≤–≤–µ–¥—ë–Ω –ø–∞—Ä–æ–ª—å "–Ø –∞–¥–º–∏–Ω", —Ç–æ 
–≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"
* –ò–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏—Ç—å —Å—Ç—Ä–æ–∫—É "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"
*/

// const userName = prompt('Your name?') ?? ''

// if (userName.trim() === '–ê–¥–º–∏–Ω') {
//     const password = prompt('Your password?')   
//     if (password === '–Ø –∞–¥–º–∏–Ω') {
//         console.log("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!")
//     } else {
//         console.log("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å")
//     }
// } else if (Boolean(userName) === false){
//     console.log('–û—Ç–º–µ–Ω–µ–Ω–æ')
// } else {
//     console.log("–Ø –≤–∞—Å –Ω–µ –∑–Ω–∞—é")
// }

// if (typeof userName === "string") {

// }

// switch (userName.trim()) {
//     case '–ê–¥–º–∏–Ω':
//         const password = prompt('Your password?')   
//         if (password === '–Ø –∞–¥–º–∏–Ω') {
//             console.log("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!")
//         } else {
//             console.log("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å")
//         }
//         break;
//     case '':
//     case null:
//         console.log('–û—Ç–º–µ–Ω–µ–Ω–æ')
//         break;
//     default:
//         console.log("–Ø –≤–∞—Å –Ω–µ –∑–Ω–∞—é")
// }


const text = `–î—É–º–∏ –º–æ—ó, –¥—É–º–∏ –º–æ—ó,
–õ–∏—Ö–æ –º–µ–Ω—ñ –∑ –≤–∞–º–∏!
–ù–∞—â–æ —Å—Ç–∞–ª–∏ –Ω–∞ –ø–∞–ø–µ—Ä—ñ
–°—É–º–Ω–∏–º–∏ —Ä—è–¥–∞–º–∏?..
–ß–æ–º –≤–∞—Å –≤—ñ—Ç–µ—Ä –Ω–µ —Ä–æ–∑–≤—ñ—è–≤
–í —Å—Ç–µ–ø—É, —è–∫ –ø–∏–ª–∏–Ω—É?
–ß–æ–º –≤–∞—Å –ª–∏—Ö–æ –Ω–µ –ø—Ä–∏—Å–ø–∞–ª–æ,
–Ø–∫ —Å–≤–æ—é –¥–∏—Ç–∏–Ω—É?...`;

let i = 0;
let counter = 0;

// while(i < textArr.length) { if (text[i] === '\n') { counter += 1 } i += 1 }




// =================================== 
 /**
  * TODO Example 7 - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å —Ü–∏–∫–ª–æ–º
  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ —ç–ª–µ–º–µ–Ω—Ç–∞.
  */
 const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
 // const ua = ['–±', '–∞', '–µ', '–∂', '–≤', '–¥'];
 // const numbers = [2, 5, 1, 7, 9, 3]
 
 // #1 [2, 1, 5, 7, 3, 9]
 // #2 [1, 2, 5, 3, 7, *9]
 // #3 [1, 2, 3, 5, *7, *9]
 // #3 [1, 2, 3, *5, *7, *9]
 
 // endI - –≥—Ä–∞–Ω–∏—Ü–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —ç—Ç–æ –≤—Å–µ–≥–¥–∞ –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ - 1
 // endJ - –≥—Ä–∞–Ω–∏—Ü–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –º–∏–Ω—É—Å —Ç–µ–∫—É—â–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
 
 // was swap - –µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–æ—à–µ–ª –ø–æ –≤—Å–µ–º—É –º–∞—Å—Å–∏–≤—É –∏ –Ω–µ –ø–æ–º–µ–Ω—è–ª –º–µ—Å—Ç–∞–º–∏ –Ω–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç
 // –∑–Ω–∞—á–∏—Ç –≤—Å–µ —Å—Ç–æ—è—Ç –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–±–∫–µ –∏ –¥–∞–ª—å—à–µ –∏–¥—Ç–∏ –ø–æ –º–∞—Å—Å–∏–≤—É –Ω–µ –Ω—É–∂–Ω–æ
 

 
 /**
  * TODO Example 8 - –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
  * –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.
  */
 
 const numbers = [2, 17, 94, 1, 23, 37];
 
 
 // console.log('min', min); // 1


